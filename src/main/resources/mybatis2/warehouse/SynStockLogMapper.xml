<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SynStockLogMapper">
	
	<!--表名 -->
	<sql id="tableName">
		syn_stock_log
	</sql>
	
	<sql id="erp_goods">
		erp_goods
	</sql>
	
	<sql id="warehouse">
		warehouse
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		warehouse_code,	
		goods_sn,	
		quantity,	
		type,	
		create_time,	
		log_id
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
		#{warehouse_code},	
		#{goods_sn},	
		#{quantity},	
		#{type},	
		#{create_time}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
				warehouse_code,	
				goods_sn,	
				quantity,	
				type,	
				create_time
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			log_id = #{log_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			quantity = #{quantity},
			type = #{type},
		log_id = log_id
		where 
		log_id = #{log_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			log_id = #{log_id}
	</select>
	
	<!-- 通过参数获取数据 -->
	<select id="findByPd" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		    <if test="warehouse_code!= null and warehouse_code != ''">
				and warehouse_code = #{warehouse_code}
			</if>
			<if test="goods_sn!= null and goods_sn != ''">
				and goods_sn = #{goods_sn}
			</if>
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			w.warehouse_code,	
			w.goods_sn,	
			w.quantity,	
			w.type,	
			w.create_time,	
			w.log_id,
			g.goods_name,
			h.warehouse_name
		from 
		<include refid="tableName"></include> w
		left join 
		<include refid="erp_goods"></include> g 
		on w.goods_sn=g.goods_sn
		left join 
		<include refid="warehouse"></include> h 
		on w.warehouse_code=h.warehouse_code
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					<!--	根据需求自己加检索条件    -->
					w.warehouse_code LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					w.goods_sn LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					g.goods_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or
					h.warehouse_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.lastStart !=null and pd.lastStart !=''">
            <![CDATA[
            and w.create_time >= #{pd.lastStart}
            ]]>
        </if>
        <if test="pd.lastEnd !=null and pd.lastEnd !=''">
            <![CDATA[
            and w.create_time <= #{pd.lastEnd}
            ]]>
        </if>
        <if test="pd.type!= null and pd.type != ''"><!-- 关键词检索 -->
			and (
			        w.type = #{pd.type}
			    )
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
			w.warehouse_code,	
			w.goods_sn,	
			w.quantity,	
			w.type,	
			w.create_time,	
			w.log_id,
			g.goods_name,
			h.warehouse_name
		from 
		<include refid="tableName"></include> w
		left join 
		<include refid="erp_goods"></include> g 
		on w.goods_sn=g.goods_sn
		left join 
		<include refid="warehouse"></include> h 
		on w.warehouse_code=h.warehouse_code
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			log_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>