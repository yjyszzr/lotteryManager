<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GoodsSkuMapper">
	
	<!--表名 -->
	<sql id="tableName">
		szy_goods_sku_6
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		sku_name,	
		goods_id,	
		sku_barcode,	
		sku_encode,
		goods_price,	
		cost_price,	
		member_price,	
		wholesale_price,	
		is_enable,	
		sku_image,	
		min_warn,	
		spec_ids,	
		spec_vids,	
		discount_rate,	
		goods_number,	
		transit_number,	
		admin_id,	
		sku_id
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{sku_name},	
        #{goods_id},	
        #{sku_barcode},	
        #{sku_encode},
        #{goods_price},	
        #{cost_price},	
        #{member_price},	
        #{wholesale_price},	
        #{is_enable},	
        #{sku_image},	
        #{min_warn},	
        #{spec_ids},	
        #{spec_vids},	
        #{discount_rate},	
        #{goods_number},	
        #{transit_number},	
        #{admin_id}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd" useGeneratedKeys="true" keyProperty="sku_id">
		insert into 
	<include refid="tableName"></include>
		(
		        sku_name,	
		        goods_id,	
		        sku_barcode,	
		        sku_encode,
		        goods_price,	
		        cost_price,	
		        member_price,	
		        wholesale_price,	
		        is_enable,	
		        sku_image,	
		        min_warn,	
		        spec_ids,	
		        spec_vids,	
		        discount_rate,	
		        goods_number,	
		        transit_number,	
		        admin_id	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
		<if test="sku_id!= null and sku_id != ''">
			sku_id = #{sku_id}
		</if>
		<if test="goods_id!= null and goods_id != ''">
			goods_id = #{goods_id}
		</if>	
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			sku_barcode = #{sku_barcode},
			sku_name = #{goods_name},	
			sku_encode = #{sku_encode},
			goods_price = #{goods_price}
		where 
			goods_id = #{goods_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			sku_id = #{sku_id}
	</select>
	
	<select id="findByEncode" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			sku_encode = #{sku_encode}
	</select>
	<select id="findByEncodeAndGoodsId" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			goods_id != #{goods_id} and sku_encode = #{sku_encode}
	</select>
	<select id="findByBarcode" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			sku_barcode = #{goods_barcode}
	</select>
	<select id="findByBarcodeAndGoodsId" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			goods_id != #{goods_id} and sku_barcode = #{goods_barcode}
	</select>
	<!-- 通过ID获取数据 -->
	<select id="findByGoodsId" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			goods_id = #{goods_id}
	</select>
	
	
	<select id="goodsdatalistPage" parameterType="page" resultType="pd">
		select
			gs.sku_name,	
			gs.goods_id,	
			gs.sku_barcode,	
			gs.sku_encode,
			gs.sku_id,
			g.unit_name,
			g.isopen_batch,
			g.spec,
			g.attr_cate,
			g.tax_rate
		from 
		szy_goods_sku_6 gs
		left join szy_goods_6 g on g.goods_id = gs.goods_id
		where 1=1 and g.attr_cate=2
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					gs.sku_encode LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					gs.sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
	</select>
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
			gs.sku_name,	
			gs.goods_id,	
			gs.sku_barcode,	
			gs.sku_encode,
			gs.sku_id,
			g.unit_name,
			g.isopen_batch,
			g.spec,
			g.attr_cate,
			g.tax_rate
		from 
		szy_goods_sku_6 gs
		left join szy_goods_6 g on g.goods_id = gs.goods_id
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					gs.sku_encode LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					gs.sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
	</select>
	
	<!-- 报损商品选择列表 -->
	<select id="datalistPage2Scrap" parameterType="page" resultType="pd">
		select
			psb.batch_code,
            psb.quantity,
			gs.sku_name,	
			gs.goods_id,	
			gs.sku_barcode,	
			gs.sku_encode,
			gs.sku_id,
			g.unit_name,
			g.isopen_batch,
			g.spec,
			g.attr_cate,
			g.tax_rate
		from 
			szy_goods_sku_6 gs
			left join szy_goods_6 g on g.goods_id = gs.goods_id
    		left join pgt_stock_batch psb on psb.sku_id = gs.sku_id
		where 1=1 and psb.quantity &gt; 0 and psb.store_id=#{pd.store_id}
		<if test="pd.keywords!= null and pd.keywords != ''">
			and
				(
					gs.sku_encode LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					gs.sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
	</select>
	
	<select id="dataByStorelistPage" parameterType="page" resultType="pd">
		select
			gs.sku_name,	
			gs.goods_id,	
			gs.sku_barcode,	
			gs.sku_encode,
			gs.sku_id,
			sg.goods_number,
			g.unit_name,
			g.isopen_batch,
			g.spec,
			g.attr_cate,
			g.tax_rate
		from 
		szy_stock_goods_6 sg
		inner join szy_goods_sku_6 gs on sg.sku_id = gs.sku_id
		left join szy_goods_6 g on g.goods_id = gs.goods_id
		left join szy_store s on sg.store_id = s.store_id
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					gs.sku_encode LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					gs.sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.store_sn!= null and pd.store_sn != ''">
			and
				(
					s.store_sn = #{pd.store_sn}
				)
		</if>
		and sg.goods_number > 0
		and sg.is_deleted = 0
	</select>
	
	<select id="dataBySupplierlistPage" parameterType="page" resultType="pd">
		select
			gs.sku_name,	
			gs.goods_id,	
			gs.sku_barcode,	
			gs.sku_encode,
			gs.sku_id,
			g.unit_name,
			g.isopen_batch,
			g.spec,
			g.attr_cate,
			g.tax_rate
		from 
		    szy_goods_6 g
		left join szy_goods_sku_6 gs on g.goods_id = gs.goods_id
		left join szy_supplier s on g.supplier_id = s.supplier_id
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					gs.sku_encode LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					gs.sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.supplier_sn!= null and pd.supplier_sn != ''">
			and
				(
					s.supplier_sn = #{pd.supplier_sn}
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="keywords!= null and keywords != ''"><!-- 关键词检索 -->
			and
				(
					sku_name LIKE CONCAT(CONCAT('%', #{keywords}),'%')
				)
		</if>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			sku_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	
	<select id="findSkuById" parameterType="pd" resultType="pd">
		
		 SELECT 
                s.sku_name,	
		s.goods_id,	
		sku_barcode,	
		sku_encode,
		goods_price,	
		cost_price,	
		s.member_price,	
		wholesale_price,	
		is_enable,	
		sku_image,	
		min_warn,	
		spec_ids,	
		spec_vids,
		spec,	
		discount_rate,	
		goods_number,	
		transit_number,	
		s.sku_id,g.unit_name
 FROM szy_goods_6  g INNER JOIN szy_goods_sku_6 s
 ON g.goods_id=s.goods_id
		where s.sku_id = #{sku_id}
	</select>
	
		<!-- 列表 -->
	<select id="listSkuNotComb" parameterType="page" resultType="pd">
		select
			gs.sku_name,	
			gs.goods_id,	
			gs.sku_barcode,	
			gs.sku_encode,
			gs.sku_id,
			g.unit_name,
			g.isopen_batch,
			g.spec,
			g.attr_cate,
			g.tax_rate
		from 
		szy_goods_sku_6 gs
		left join szy_goods_6 g on g.goods_id = gs.goods_id
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					gs.sku_encode LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					gs.sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
	</select>
	<!-- fh313596790qq(青苔) -->
</mapper>