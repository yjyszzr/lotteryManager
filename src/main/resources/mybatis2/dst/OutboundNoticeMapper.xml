<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OutboundNoticeMapper">
	
	<!--表名 -->
	<sql id="tableName">
		pgt_outbound_notice
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		outbound_notice_code,	
		store_sn,	
		store_name,	
		bill_type,	
		purchase_code,	
		purchase_detail_id,	
		pre_send_time,	
		send_time,	
		status,	
		createby,	
		create_time,	
		updateby,	
		update_time,
		print_count,	
		outbound_notice_id
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{outbound_notice_code},	
        #{store_sn},	
        #{store_name},	
        #{bill_type},	
        #{purchase_code},	
        #{purchase_detail_id},	
        #{pre_send_time},	
        #{send_time},	
        #{status},	
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{update_time}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        outbound_notice_code,	
		        store_sn,	
		        store_name,	
		        bill_type,	
		        purchase_code,	
		        purchase_detail_id,	
		        pre_send_time,	
		        send_time,	
		        status,	
		        createby,	
		        create_time,	
		        updateby,	
		        update_time	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			outbound_notice_id = #{outbound_notice_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			outbound_notice_code = #{outbound_notice_code},
			store_sn = #{store_sn},
			store_name = #{store_name},
			bill_type = #{bill_type},
			purchase_code = #{purchase_code},
			pre_send_time = #{pre_send_time},
			send_time = #{send_time},
			status = #{status},
			createby = #{createby},
			create_time = #{create_time},
			updateby = #{updateby},
			update_time = #{update_time},
		outbound_notice_id = outbound_notice_id
		where 
		outbound_notice_id = #{outbound_notice_id}
	</update>
	
	
	<!-- 修改 -->
	<update id="updateStatus" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			status = #{status},
			updateby = #{updateby},
			update_time =NOW()
		where 
		outbound_notice_id = #{outbound_notice_id}
		and status != 10 and status != 1
	</update>
	
	
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
			ss.store_id,
			pon.outbound_notice_code,	
			pon.store_sn,	
			pon.store_name,	
			pon.bill_type,	
			pon.purchase_code,	
			pon.purchase_detail_id,	
			pon.pre_send_time,	
			pon.send_time,	
			pon.status,	
			pon.createby,	
			pon.create_time,	
			pon.updateby,	
			pon.update_time,	
			pon.outbound_notice_id
		from 
		pgt_outbound_notice pon INNER JOIN szy_store ss  on pon.store_sn=ss.store_sn
		where 
			outbound_notice_id = #{outbound_notice_id}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		and store_sn in 
		<foreach item="item" index="index" collection="pd.my_store" open="(" separator="," close=")">  
		  #{pd.my_store[${index}]}
		</foreach> 
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and outbound_notice_code=#{pd.keywords}
		</if>
		
		<if test="pd.bill_type!= null"><!-- 关键词检索 -->
			and bill_type=${pd.bill_type}
		</if>
		
			<if test="pd.warename!= null and pd.warename!= ''"><!-- 关键词检索 -->
			and 
			( store_name like CONCAT(CONCAT('%', #{pd.warename}),'%')
			   or store_sn like CONCAT(CONCAT('%', #{pd.warename}),'%')
			)
		</if>
		
			<if test="pd.purchase_code!= null and pd.purchase_code!=''"><!-- 关键词检索 -->
			and purchase_code=#{pd.purchase_code}
		</if>
		
			<if test="pd.status!= null and pd.status!=''">
			and status=${pd.status}
		  </if>
		
		<if test="pd.lastStart!= null and pd.lastStart!='' "><!-- 关键词检索 -->
			<![CDATA[ and create_time>=#{pd.lastStart} ]]>  
		</if>
		
		<if test="pd.lastEnd!= null and pd.lastEnd!='' "><!-- 关键词检索 -->
		<![CDATA[ and create_time<=#{pd.lastEnd} ]]>   	
		</if>
		
		<if test="pd.store_sn!= null and pd.store_sn != ''">
			and 
			(
				store_sn = #{pd.store_sn}
			)
		</if>
		
		ORDER BY create_time DESC 
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			outbound_notice_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	<!-- fh313596790qq(青苔) -->
	
	<select id="listByNoticeIds" parameterType="String" resultType="pd">
		
		SELECT * FROM 
		<include refid="tableName"></include>  
		WHERE outbound_notice_id IN 
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
		
	</select>
	
	<select id="orderConsigeen" parameterType="pd" resultType="pd">
		select * from pgt_order where order_sn=#{purchase_code}
	</select>
	
	<update id="updatePrintCount" >
		update
		<include refid="tableName"></include>
		set 
			print_count=print_count+1
		WHERE outbound_notice_id IN 
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</update>
</mapper>