<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PurchaseMaterialMapper">
	
	<!--表名 -->
	<sql id="tableName">
		pgt_purchase_material
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		purchase_code,	
		purchase_detail_id,	
		sku_id,	
		sku_name,
		total_apply_quantity,	
		total_quantity,
		total_return_quantity,	
		status,	
		createby,	
		create_time,	
		updateby,	
		update_time,
		purchase_detail_sku_id,
		purchase_detail_sku_name,	
		material_id
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{purchase_code},	
        #{purchase_detail_id},	
        #{sku_id},	
        #{sku_name},	
        #{total_apply_quantity},	
        #{total_quantity},
        #{total_return_quantity},	
        #{status},	
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{update_time},	
        #{purchase_detail_sku_id},	
        #{purchase_detail_sku_name}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd" useGeneratedKeys="true" keyProperty="material_id">
		insert into 
	<include refid="tableName"></include>
		(
		        purchase_code,	
		        purchase_detail_id,	
		        sku_id,	
		        sku_name,
		        total_apply_quantity,	
		        total_quantity,
		        total_return_quantity,		
		        status,	
		        createby,	
		        create_time,	
		        updateby,	
		        update_time,
				purchase_detail_sku_id,
				purchase_detail_sku_name	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			material_id = #{material_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			total_apply_quantity = #{total_apply_quantity},
			updateby = #{updateby},
			update_time = #{update_time},
		material_id = material_id
		where 
		material_id = #{material_id}
	</update>
	<update id="editCount" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			total_quantity = #{total_quantity},
			status = #{status},
			updateby = #{updateby},
			update_time = #{update_time}
		where 
		material_id = #{material_id}
	</update>
	<!-- 领料/退料 -->
	<update id="update" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			status = #{status},
			updateby = #{updateby},
			update_time = #{update_time},
		material_id = material_id
		where 
		material_id = #{material_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			material_id = #{material_id}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
					purchase_code LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or 
					status LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
					 or 
					purchase_detail_sku_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				)
		</if>
		<if test="pd.lastStart !=null and pd.lastStart !=''">
            <![CDATA[
            and create_time >= #{pd.lastStart}
            ]]>
        </if>
        <if test="pd.lastEnd !=null and pd.lastEnd !=''">
            <![CDATA[
            and create_time <= #{pd.lastEnd}
            ]]>
        </if>
	    <if test="pd.status!= null and pd.status != ''">
			and (
			        status = #{pd.status}
			    )
		</if>
		and purchase_detail_sku_name = #{pd.purchase_detail_sku_name}
		and purchase_code = #{pd.purchase_code}
		order by create_time desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			material_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	
	<!-- 领料数量 -->
	<update id="updateQuantity" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
		    status=3,
		    total_apply_quantity=total_apply_quantity-${total_apply_quantity},
            total_quantity=total_quantity+${total_quantity},
			updateby = #{updateby},
			update_time = #{update_time}
		where 
		material_id = #{material_id}
	</update>
	
	<!-- 增加领料数量  20171012-->
	<update id="increaseReturnQuantity" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
            total_return_quantity = total_return_quantity + ${total_return_quantity},
			updateby = #{updateby},
			update_time = #{update_time}
		where 
		material_id = #{material_id}
	</update>
	
	<update id="increaseReturnAndTotal" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			total_quantity= total_quantity + ${total_quantity},
            total_return_quantity = total_return_quantity + ${total_return_quantity},
			updateby = #{updateby},
			update_time = #{update_time}
		where 
		material_id = #{material_id}
	</update>
	<update id="increaseQuantity" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
            total_apply_quantity= total_apply_quantity + ${total_apply_quantity},
			updateby = #{updateby},
			update_time = #{update_time}
		where 
		material_id = #{material_id}
	</update>
	<!-- 通过明细id与sku_id查询 -->
	<select id="findByMaterial" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			purchase_detail_id = #{purchase_detail_id} 
			and
			sku_id = #{sku_id} 
	</select>
	
	<select id="listById" parameterType="pd" resultType="pd">
		select 
			m.purchase_code,	
			m.purchase_detail_id,	
			m.sku_id,	
			m.sku_name,
			m.total_apply_quantity,	
			m.total_quantity,
			m.total_return_quantity,	
			m.status,	
			m.createby,	
			m.create_time,	
			m.updateby,	
			m.update_time,
			m.purchase_detail_sku_id,
			m.purchase_detail_sku_name,	
			m.material_id,
			s.sku_encode
		from 
			pgt_purchase_material m
		left join
			szy_goods_sku_6 s
		on
			m.sku_id = s.sku_id
		where 
			m.purchase_detail_id = #{purchase_detail_id} 
	</select>
	<!-- 增加20171012-->
	<!-- fh313596790qq(青苔) -->
	
	<select id="findMaterialDetail" parameterType="pd" resultType="pd">
		select * from pgt_purchase_material_detail
		where  batch_code=#{batch_code} 
			  and purchase_detail_id=#{purchase_detail_id}
			  and store_sn=#{store_sn}
	</select>
	
	<insert id="insertMaterialDetail" parameterType="pd">
		insert into pgt_purchase_material_detail
		(purchase_code,purchase_detail_id,purchase_material_id,store_sn,store_name,sku_id,
		sku_encode,sku_name,spec,unit,batch_code,quantity,status,createby,create_time,updateby,update_time)
		values(#{purchase_code},#{purchase_detail_id},#{purchase_material_id},#{store_sn},#{store_name},#{sku_id},
		#{sku_encode},#{sku_name},#{spec},#{unit},#{batch_code},#{quantity},#{status},#{createby},#{create_time},#{updateby},#{update_time})
	</insert>
	
	<update id="updateMaterialDetail" parameterType="pd">
		update pgt_purchase_material_detail 
		set quantity=quantity+${quantity},
			updateby = #{updateby},
			update_time = #{update_time}
		where  batch_code=#{batch_code} 
			  and purchase_detail_id=#{purchase_detail_id}
			  and store_sn=#{store_sn}
	</update>
	
	
</mapper>