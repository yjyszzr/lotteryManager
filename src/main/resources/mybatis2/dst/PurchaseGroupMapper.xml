<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="PurchaseGroupMapper">
	
	<!--表名 -->
	<sql id="tableName">
		pgt_purchase_group
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		purchase_group_id,	
		purchase_group_name,	
		createby,	
		create_time,	
		updateby,	
		type,<!--0:采购，1:生产  -->
		update_time
		
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
       
        #{purchase_group_name},	
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{type},	
        #{update_time}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		   
		        purchase_group_name,	
		        createby,	
		        create_time,	
		        updateby,	
		        type,
		        update_time	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			purchase_group_id = #{purchase_group_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			purchase_group_name = #{purchase_group_name},
			type = #{type},
			update_time = #{update_time},
			updateby=#{updateby},
		purchase_group_id = purchase_group_id
		where 
		purchase_group_id = #{purchase_group_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			purchase_group_id = #{purchase_group_id}
	</select>
	<!-- 通过ID获取数据 -->
	<select id="findByName" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			purchase_group_name = #{purchase_group_name}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.purchase_group_name!= null and pd.purchase_group_name != ''"><!-- 关键词检索 -->
			and
				(
				purchase_group_name like  CONCAT('%',#{pd.purchase_group_name},'%' ) 
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
	
		<if test="type!= null and type != ''"><!-- 关键词检索 -->
			and
				(
				type = #{type}
				)
		</if>
	</select>
	
	<!-- 查询采购组下用户 -->
	<select id="listAllUserByGP" parameterType="pd" resultType="pd">
		select
		purchase_group_id,
		user_id
		from 
		pgt_purchase_group_user 
		where 1=1
		<if test="purchase_group_id!= null and purchase_group_id != ''"><!-- 关键词检索 -->
			and
				(
				purchase_group_id = #{purchase_group_id}
				)
		</if>
	</select>
	<!-- 查询用户所属采购组-->
	<select id="listAllGPByUser" parameterType="pd" resultType="pd">
		select
		g.purchase_group_id,g.purchase_group_name
		
		from 
		pgt_purchase_group_user u inner join pgt_purchase_group g
		on  u.purchase_group_id=g.purchase_group_id
		where 1=1
		<if test="user_id!= null and user_id != ''"><!-- 关键词检索 -->
			and
				(
				u.user_id = #{user_id}
				)
		</if>
		<if test="type!= null and type != ''"><!-- 关键词检索 -->
			and
				(
				g.type = #{type}
				)
		</if>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			purchase_group_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	<!-- 删除组下用户-->
	<delete id="deleteGpUser"  parameterType="pd" >
		delete from
		pgt_purchase_group_user
		where 
			purchase_group_id = #{purchase_group_id}
			and 
			user_id = #{user_id}
			
	</delete>
	
	
	<!-- 批量插入采购组用户 -->
	<insert id="batchInsertGpUser" parameterType="java.util.List">
        insert into pgt_purchase_group_user (purchase_group_id, user_id)
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (#{item.purchase_group_id}, #{item.user_id})
        </foreach>
    </insert>
	 
	<!-- fh313596790qq(青苔) -->
</mapper>