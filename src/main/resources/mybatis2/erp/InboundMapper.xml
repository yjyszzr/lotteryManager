<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="InboundMapper">
	
	<!--表名 -->
	<sql id="tableName">
		pgt_inbound
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		inbound_code,	
		inbound_type,	
		purchase_code,	
		purchase_detail_id,	
		inbound_notice_code,	
		business_time,	
		store_sn,	
		store_name,	
		status,	
		createby,	
		create_time,	
		updateby,	
		update_time,	
		inbound_id
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{inbound_code},	
        #{inbound_type},	
        #{purchase_code},	
        #{purchase_detail_id},	
        #{inbound_notice_code},	
        #{business_time},	
        #{store_sn},	
        #{store_name},	
        #{status},	
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{update_time}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        inbound_code,	
		        inbound_type,	
		        purchase_code,	
		        purchase_detail_id,	
		        inbound_notice_code,	
		        business_time,	
		        store_sn,	
		        store_name,	
		        status,	
		        createby,	
		        create_time,	
		        updateby,	
		        update_time	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			inbound_id = #{inbound_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			inbound_code = #{inbound_code},
			inbound_type = #{inbound_type},
			purchase_code = #{purchase_code},
			purchase_detail_id = #{purchase_detail_id},
			inbound_notice_code = #{inbound_notice_code},
			business_time = #{business_time},
			store_sn = #{store_sn},
			store_name = #{store_name},
			status = #{status},
			createby = #{createby},
			create_time = #{create_time},
			updateby = #{updateby},
			update_time = #{update_time},
		inbound_id = inbound_id
		where 
		inbound_id = #{inbound_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			inbound_id = #{inbound_id}
	</select>
	
		<!-- 通过InboundNoticeCode获取数据 -->
	<select id="findByInboundNoticeCode" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			inbound_notice_code = #{inbound_notice_code}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.inbound_type!= null and pd.inbound_type != 0"><!-- 关键词检索 -->
			and inbound_type=#{pd.inbound_type}
		</if>
		<if test="pd.store_sn!= null and pd.store_sn != ''">
			and 
			(
				store_sn = #{pd.store_sn}
			)
		</if>
		<if test="pd.purchase_code!= null and pd.purchase_code != ''"><!-- 关键词检索 -->
			and ( purchase_code LIKE CONCAT(CONCAT('%', #{pd.purchase_code}),'%')
				)
		</if>
		<if test="pd.inbound_notice_code!= null and pd.inbound_notice_code != ''"><!-- 关键词检索 -->
			and ( inbound_notice_code LIKE CONCAT(CONCAT('%', #{pd.inbound_notice_code}),'%'))
		</if>
		<if test="pd.start_date!= null and pd.start_date != ''">
			and 
			(
				business_time &gt;= CONCAT(#{pd.start_date},' 00:00:00')
			)
		</if>
		<if test="pd.end_date!= null and pd.end_date != ''">
			and 
			(
				business_time &lt;= CONCAT(#{pd.end_date},' 23:59:59')
			)
		</if>
		order by create_time desc 
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	<select id="listAllTimeSpan10" parameterType="pd" resultType="pd">
		SELECT pi.inbound_id,pi.inbound_code,	
		pi.inbound_type,	
		pi.purchase_code,	
		pi.purchase_detail_id,	
		pi.inbound_notice_code,	
		pi.business_time,	
		pi.store_sn,	
		pi.store_name,	
		pi.status,
		ss.store_id
	    from pgt_inbound pi
	    inner join szy_store ss on pi.store_sn = ss.store_sn
	    where pi.create_time> date_add(NOW(), interval -10 minute) and pi.syn_status = 0
	</select>
	<update id="updateSynStatus" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			syn_status = 1
		where 
		inbound_id = #{inbound_id}
	</update>
	<select id="listInboundDetail" parameterType="pd" resultType="pd">
		SELECT 		inbound_code,	
		purchase_code,	
		purchase_detail_id,	
		inbound_notice_code,	
		notice_detail_id,	
		sku_id,	
		sku_name,
		sku_encode,
		spec,	
		quantity,	
		status,	
		createby,	
		create_time,	
		updateby,	
		update_time
	    from pgt_inbound_detail where inbound_code=#{inbound_code}
	</select>
	
	<select id="listInbound" parameterType="pd" resultType="pd">
		SELECT 
		    '1' io_type, 
		    A.store_sn, 
		    A.store_name, 
		    A.inbound_code code, 
		    A.inbound_notice_code notice_code, 
		    A.inbound_type type, 
		    A.purchase_code, 
		    A.createby,
		    A.create_time,
		    B.sku_id,B.sku_encode,
		    B.sku_name,B.spec,
		    B.quantity 
		FROM pgt_inbound A,pgt_inbound_detail B 
		WHERE A.inbound_code = B.inbound_code and B.sku_id = #{sku_id} AND A.store_sn= #{store_sn}
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			inbound_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<select id="queryByPurchaseCode" parameterType="pd" resultType="pd">
	select
		<include refid="Field"></include>
	from
		<include refid="tableName"></include>
	where
		purchase_code = #{purchase_code}
	</select>
	<!-- fh313596790qq(青苔) -->
</mapper>