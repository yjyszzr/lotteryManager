<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="InboundNoticeDetailMapper">
	
	<!--表名 -->
	<sql id="tableName">
		pgt_inbound_notice_detail
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		inbound_code,	
		purchase_code,	
		purchase_detail_id,	
		sku_id,	
		sku_name,	
		sku_encode,	
		spec,	
		pre_arrival_quantity,	
		good_quantity,	
		bad_quantity,	
		bad_deal_type,	
		quality_status,	
		quality_time,	
		quality_id,	
		status,	
		notice_detail_id,	
		createby,	
		create_time,	
		updateby,	
		update_time,batch_code	
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{inbound_code},	
        #{purchase_code},	
        #{purchase_detail_id},	
        #{sku_id},	
        #{sku_name},	
        #{sku_encode},	
        #{spec},
        #{pre_arrival_quantity},	
        #{good_quantity},	
        #{bad_quantity},	
        #{bad_deal_type},	
        #{quality_status},	
        #{quality_time},	
        #{quality_id},	
        #{status},	
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{update_time},#{batch_code}		
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd" useGeneratedKeys="true" keyProperty="notice_detail_id">
		insert into 
	<include refid="tableName"></include>
		(
		        inbound_code,	
		        purchase_code,	
		        purchase_detail_id,	
		        sku_id,	
		        sku_name,
		        sku_encode,	
		        spec,		
		        pre_arrival_quantity,	
		        good_quantity,	
		        bad_quantity,	
		        bad_deal_type,	
		        quality_status,	
		        quality_time,	
		        quality_id,	
		        status,
		        createby,
		        create_time,
		        updateby,
		        update_time	
		) values (
	    #{inbound_code},	
        #{purchase_code},	
        #{purchase_detail_id},	
        #{sku_id},	
        #{sku_name},	
        #{sku_encode},
        #{spec},	
        #{pre_arrival_quantity},	
        #{good_quantity},	
        #{bad_quantity},	
        #{bad_deal_type},	
        #{quality_status},	
        #{quality_time},	
        #{quality_id},	
        #{status},
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{update_time}
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			notice_detail_id = #{notice_detail_id}
	</delete>
	
		<!-- 修改 -->
	<update id="updateState" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			status = #{status},
			updateby = #{updateby},
		    update_time = #{update_time}
		where 
		notice_detail_id = #{notice_detail_id}
	</update>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			good_quantity = #{good_quantity},
			bad_quantity = #{bad_quantity},
			bad_deal_type = #{bad_deal_type},
			quality_time = #{quality_time},
			quality_id = #{quality_id},
			quality_status = #{quality_status}
		where 
		notice_detail_id = #{notice_detail_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			notice_detail_id = #{notice_detail_id}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			notice_detail_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 列表(条件) -->
	<select id="datalistByWhere" parameterType="pd" resultType="pd">
	select
		pad.inbound_code,	
		pad.purchase_code,	
		pad.purchase_detail_id,	
		pad.sku_id,	
		pad.sku_name,	
		pad.sku_encode en,	
		pad.spec ec,	
		pad.pre_arrival_quantity,	
		pad.good_quantity,	
		pad.bad_quantity,	
		pad.bad_deal_type,	
		pad.quality_status,	
		pad.quality_time,	
		pad.quality_id,	
		pad.status,	
		pad.notice_detail_id,	
		pad.createby,	
		pad.create_time,	
		pad.updateby,	
		pad.update_time,
		pad.batch_code,	
		t3.unit_name unit,
		g.spec,
		g.isopen_batch,
		g.attr_cate,
		gs.sku_encode sku_encode,
		gs.sku_barcode sku_barcode
		from pgt_inbound_notice_detail pad
		left join szy_goods_sku_6 gs on pad.sku_id = gs.sku_id
		left join szy_goods_6 g on g.goods_id = gs.goods_id
		left join szy_goods_unit t3 on t3.unit_id = g.unit_id
		where 1=1
		<if test="inbound_notice_code!= null">
			and pad.inbound_code = #{inbound_notice_code}
		</if>
		
	</select>
	
	<!-- 分页列表 -->
	<select id="datalistPageByWhere" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.inbound_code!= null">
			and inbound_code = #{pd.inbound_code}
		</if>
		
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	
	<insert id="saveBatch" parameterType="pd">
	INSERT INTO `pgt_inbound_notice_detail`
(
                       inbound_code,	
		        purchase_code,	
		        purchase_detail_id,	
		        sku_id,	sku_name,
		        pre_arrival_quantity,	
		        good_quantity,	
		        bad_quantity,	
		        bad_deal_type,	
		        quality_status,	
		        quality_time,	
		        quality_id,	
		        status,
		        createby,
		        create_time,
		        updateby,
		        update_time	,sku_encode,spec
)
SELECT
 #{inbound_code},allocation_code,allocation_detail_id,sku_id,sku_name,quantity,
 quantity,0,0,0,NULL,0,0,#{createby},NOW(),#{updateby},NOW(),sku_encode,spec
 FROM `pgt_allocation_detail`  WHERE allocation_code=#{allocation_code}
	
	</insert>
	
		<update id="editbatch" parameterType="pd">
	UPDATE pgt_inbound_notice_detail SET batch_code=#{batch_code}
	 WHERE notice_detail_id = #{notice_detail_id}
	</update>
	
	
    <select id="findlistByNoticeCode" parameterType="pd" resultType="pd">
		select
		notice_detail_id,
        inbound_code,	
		purchase_code,	
		purchase_detail_id,	
		sku_id,	
		sku_name,	
		sku_encode,	
		spec,	
		pre_arrival_quantity,	
		good_quantity,	
		bad_quantity,	
		bad_deal_type,	
		quality_status,	
		quality_time,	
		quality_id,	
		status,	
		notice_detail_id,	
		createby,	
		create_time,	
		updateby,	
		update_time,batch_code	
		from 
		<include refid="tableName"></include>
		where inbound_code=#{inbound_notice_code}
	</select>
	
	<update id="updateStatus"  parameterType="pd">  
	      update pgt_inbound_notice_detail   
          <set>  
            status = ${status}  
          </set>  
          where notice_detail_id in (
          <foreach collection="list" item="item" index="index" open="" close="" separator=",">  
                 ${item.notice_detail_id}  
          </foreach>  
          )
    </update>
	
	<!--查询详情  -->
	<select id="findAllByInboundDetilCode" parameterType="pd" resultType="pd">
	 	select * from pgt_inbound_detail d ,pgt_inbound i WHERE
	 	d.inbound_code = #{inbound_code}
	</select> 
	
	<!-- fh313596790qq(青苔) -->
</mapper>