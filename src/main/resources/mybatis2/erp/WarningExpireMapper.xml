<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="WarningExpireMapper">
	
	<!--表名 -->
	<sql id="tableName">
		pgt_warning_expire
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		warning_date,	
		store_id,	
		store_sn,	
		store_name,	
		sku_id,	
		sku_encode,	
		sku_name,	
		spec,	
		unit_name,	
		warning_days,	
		quantity,	
		createby,	
		create_time,	
		updateby,	
		update_time,	
		warning_expire_id
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{warning_date},	
        #{store_id},	
        #{store_sn},	
        #{store_name},	
        #{sku_id},	
        #{sku_encode},	
        #{sku_name},	
        #{spec},	
        #{unit_name},	
        #{warning_days},	
        #{quantity},	
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{update_time}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        warning_date,	
		        store_id,	
		        store_sn,	
		        store_name,	
		        sku_id,	
		        sku_encode,	
		        sku_name,	
		        spec,	
		        unit_name,	
		        warning_days,	
		        quantity,	
		        createby,	
		        create_time,	
		        updateby,	
		        update_time	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<insert id="saveWarningExpire" parameterType="pd">
		insert into 
	    <include refid="tableName"></include>
		(
		        warning_date,	
		        store_id,	
		        store_sn,	
		        store_name,	
		        sku_id,	
		        sku_encode,	
		        sku_name,	
		        spec,	
		        unit_name,	
		        warning_days,	
		        quantity,
		        createby,	
		        create_time,	
		        updateby,	
		        update_time		
		) values 
		<foreach collection="list" item="item" index="index" separator=",">
            (
                #{item.warning_date,jdbcType=TIMESTAMP}, 
                #{item.store_id,jdbcType=INTEGER},
                #{item.store_sn,jdbcType=VARCHAR},
                #{item.store_name,jdbcType=VARCHAR},
                #{item.sku_id,jdbcType=INTEGER},
                #{item.sku_encode,jdbcType=VARCHAR},
                #{item.sku_name,jdbcType=VARCHAR},
                #{item.spec,jdbcType=VARCHAR},
                #{item.unit_name,jdbcType=VARCHAR},
                #{item.warning_days,jdbcType=INTEGER},
                #{item.quantity,jdbcType=INTEGER},
                #{item.createby,jdbcType=VARCHAR},
                #{item.create_time,jdbcType=TIMESTAMP},
                #{item.updateby,jdbcType=VARCHAR},
                #{item.update_time,jdbcType=TIMESTAMP}
            )
        </foreach>
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			warning_expire_id = #{warning_expire_id}
	</delete>
	
	<delete id="deleteAllWarning" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where warning_date = DATE_FORMAT(NOW(),'%Y-%m-%d')
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			warning_date = #{warning_date},
			store_sn = #{store_sn},
			store_name = #{store_name},
			sku_encode = #{sku_encode},
			sku_name = #{sku_name},
			spec = #{spec},
			unit_name = #{unit_name},
			warning_days = #{warning_days},
			quantity = #{quantity},
		warning_expire_id = warning_expire_id
		where 
		warning_expire_id = #{warning_expire_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			warning_expire_id = #{warning_expire_id}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.sku_encode!= null and pd.sku_encode != ''">
			and
				(
					sku_encode LIKE CONCAT(CONCAT('%', #{pd.sku_encode}),'%')
				)
		</if>
		<if test="pd.sku_name!= null and pd.sku_name != ''">
			and
				(
					sku_name LIKE CONCAT(CONCAT('%', #{pd.sku_name}),'%')
				)
		</if>
		<if test="pd.store_sn!= null and pd.store_sn != ''">
			and
				(
					store_sn = #{pd.store_sn}
				)
		</if>
		<if test="pd.warning_date!= null and pd.warning_date != ''">
			and
				(
					TO_DAYS(warning_date) - TO_DAYS(#{pd.warning_date}) = 0
				)
		</if>
		order by create_time desc
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<select id="selectWarningExpire" parameterType="pd" resultType="pd">
		SELECT 
			DATE_FORMAT(NOW(),'%Y-%m-%d') warning_date,
			pgt_stock_batch.store_id,
			MAX(szy_store.store_sn) store_sn,
			MAX(szy_store.store_name) store_name,
			pgt_stock_batch.sku_id,
			MAX(pgt_stock_batch.sku_encode) sku_encode,
			MAX(pgt_stock_batch.sku_name) sku_name,
			MAX(szy_goods_6.spec) spec,
			MAX(szy_goods_6.unit_name) unit_name,
			MAX(szy_goods_6.quality_period) warning_days,
			SUM(pgt_stock_batch.quantity) quantity
		FROM
			pgt_stock_batch, szy_goods_6, szy_store
		where pgt_stock_batch.sku_id = szy_goods_6.goods_id
		and szy_store.store_id = pgt_stock_batch.store_id
		and pgt_stock_batch.quantity > 0
		and IFNULL(datediff(now(),CONCAT('20',SUBSTR(batch_code ,-7,6))),0) > szy_goods_6.quality_period
		GROUP BY 
		pgt_stock_batch.store_id, pgt_stock_batch.sku_id
	</select>
	
	<select id="selectwarningExpireBatch" parameterType="pd" resultType="pd">
		SELECT 
			DATE_FORMAT(NOW(),'%Y-%m-%d') warning_date,
			pgt_stock_batch.store_id,
			szy_store.store_sn,
			szy_store.store_name,
			pgt_stock_batch.sku_id,
			pgt_stock_batch.sku_encode,
			pgt_stock_batch.sku_name,
			szy_goods_6.spec,
			szy_goods_6.unit_name,
			szy_goods_6.quality_period warning_days,
			pgt_stock_batch.quantity,
			pgt_stock_batch.batch_code
		FROM
			pgt_stock_batch, szy_goods_6, szy_store
		where pgt_stock_batch.sku_id = szy_goods_6.goods_id
		and szy_store.store_id = pgt_stock_batch.store_id
		and pgt_stock_batch.quantity > 0
		and IFNULL(datediff(now(),CONCAT('20',SUBSTR(batch_code ,-7,6))),0) > szy_goods_6.quality_period
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			warning_expire_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>