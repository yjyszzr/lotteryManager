<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="StoreShopMapper">
	
	<!--表名 -->
	<sql id="tableName">
		pgt_store_shop
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		store_id,	
		store_name,	
		shop_id,	
		shop_name,	
		status,	
		createby,	
		create_time,	
		updateby,	
		update_time,	
		store_shop_id
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{store_id},	
        #{store_name},	
        #{shop_id},	
        #{shop_name},	
        #{status},	
        #{createby},	
        #{create_time},	
        #{updateby},	
        #{update_time}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        store_id,	
		        store_name,	
		        shop_id,	
		        shop_name,	
		        status,	
		        createby,	
		        create_time,	
		        updateby,	
		        update_time	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			store_shop_id = #{store_shop_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			store_id = #{store_id},
			shop_id = #{shop_id},
		    store_name = #{store_name},
		    shop_name = #{shop_name}
		where 
		store_shop_id = #{store_shop_id}
	</update>
	<select id="findByStore" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			store_id in ( SELECT store_id from szy_store where store_sn=#{store_sn})
	</select>
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			store_shop_id = #{store_shop_id}
	</select>
	<select id="findByStoreIdOnly" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where store_id = #{store_id}
	</select>
	<!-- 通过StoreID获取数据 -->
	<select id="findByStoreId" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			store_id = #{store_id} and store_shop_id not in (#{store_shop_id})
	</select>
	
	<!-- 通过ShopID获取数据 -->
	<select id="findByShopId" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			shop_id = #{shop_id} and store_shop_id not in (#{store_shop_id})
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1 
		<if test="pd.keywords != null and pd.keywords != ''"><!-- 关键词检索 -->
			and ((store_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')) or (shop_name LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%'))) 
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
		</if>
		<if test="pd.name != null and pd.name != ''">
		    and name = store_shop_id 
		</if>
		<!-- &gt; < and &lt; > -->
		<if test="pd.lastStart != null and pd.lastStart != ''">
		    and update_time &gt; #{pd.lastStart} 
		</if>
		<if test="pd.lastEnd != null and pd.lastEnd != ''">
		    and update_time &lt; #{pd.lastEnd} 
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1 
		<if test="pd.store_name != null and pd.store_name != ''">
		    and store_name = #{store_name} 
		</if>
	</select>
	
    <select id="listAllByUserId" parameterType="pd"  resultType="pd">
		select
		store_id,	
		store_name,	
		shop_id,	
		shop_name,	
		status,	
		createby,	
		create_time,	
		updateby,	
		update_time
		from 
		pgt_store_shop
		where 1=1 
		<if test="user_id != null and user_id != ''">
		 and  store_id in (SELECT store_id from  szy_store  where  store_sn in ( SELECT  store_sn  from pgt_org_store  where org_id in (SELECT org_id from pgt_org_user where user_id=#{user_id}))) 
		</if>
		
	</select>
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			store_shop_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>