<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="GoodsShopErpStockMapper">
	
	<!--表名 -->
	<sql id="tableName">
		szy_goods
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		goods_id,	
		goods_name,	
		cat_id,	
		shop_id,	
		sku_open,	
		sku_id,	
		goods_number,	
		goods_sn,	
		goods_barcode,	
		goods_sort
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{goods_id},	
        #{goods_name},	
        #{cat_id},	
        #{shop_id},	
        #{sku_open},	
        #{sku_id},	
        #{goods_number},	
        #{goods_sn},	
        #{goods_barcode},	
        #{goods_sort}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        goods_id,	
		        goods_name,	
		        cat_id,	
		        shop_id,	
		        sku_open,	
		        sku_id,	
		        goods_number,	
		        goods_sn,	
		        goods_barcode,	
		        goods_sort	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<insert id="saveWarehouseStock" parameterType="pd">
		insert into 
	szy_warehouse_stock
		(
			shop_id,
			goods_id,
			warehouse_id,
			warehouse_code,
			stock_num,
			freight_id
		) values (
	        #{shop_id},	
	        #{goods_id},	
	        #{warehouse_id},	
	        #{warehouse_code},	
	        #{stock_num},	
	        #{freight_id}	
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			goods_id = #{goods_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			goods_number = #{goods_number}
		where 
		goods_id = #{goods_id}
	</update>
	<update id="updateShopStockByGoodsId" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			goods_number = #{goods_number}
		where 
		    goods_id = #{goods_id}
	</update>
	
	<update id="updateWarehouseStock" parameterType="pd">
		update
		szy_warehouse_stock
		set 
			stock_num = #{stock_num}
		where 
		    warehouse_stock_id = #{warehouse_stock_id}
	</update>
	
	<update id="updateShopStock" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			goods_number = goods_number+#{goods_number}
		where 
		    shop_id = #{shop_id} and goods_sn = #{goods_sn}
	</update>
	<update id="updateOrderStatus" parameterType="pd">
		update
		szy_order
		set 
			shipping_status = #{shipping_status},
			shipping_time =#{shipping_time}
		where 
		    order_sn = #{order_sn}
	</update>
	<!-- 列表(全部) -->
	<select id="listShopGoodsAll" parameterType="pd" resultType="pd">
		select  shop_id,goods_sn,goods_id
		from szy_goods
		where 
		    shop_id = #{shop_id} and goods_sn = #{goods_sn}
	</select>
	<select id="listUserByOrderSn" parameterType="pd" resultType="pd">
		SELECT  user_name,mobile from szy_user where  user_id in 
		(select user_id  from szy_order  where  order_sn = #{order_sn})
	</select>
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			goods_id = #{goods_id}
	</select>
	<select id="findByIdByShopAndSn" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			shop_id = #{shop_id} and goods_sn = #{goods_sn}
	</select>
	
	<select id="findByWarehouseCode" parameterType="pd" resultType="pd">
		select 
			warehouse_id
		from 
		    szy_warehouse
		where 
			warehouse_code = #{warehouse_code}
	</select>
	
	<select id="findByStockParam" parameterType="pd" resultType="pd">
		select 
			ws.warehouse_stock_id,ws.shop_id,ws.goods_id,ws.warehouse_id,ws.warehouse_code,ws.stock_num,ws.freight_id
		from 
		    szy_warehouse_stock ws 
		inner join szy_warehouse  w on ws.warehouse_id = w.warehouse_id 
		where 
			ws.shop_id = #{shop_id} 
		and ws.goods_id = #{goods_id} 
		and w.warehouse_code = #{warehouse_code}
	</select>
	  
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			goods_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
	
	<update id="updateSynOrderStatus" parameterType="pd">
		update
		szy_order
		set 
			shipping_status = #{shipping_status},
			shipping_time =#{shipping_time},
			order_cancel =3,
			confirm_time = #{confirm_time},
			refuse_reason ='卖家已发货'
		where 
		    order_sn = #{order_sn}
	</update>
	
	<select id="findShop" parameterType="pd" resultType="pd">
		select 
		  warehouse_id,
		  warehouse_name,
		  warehouse_letter,
		  region_code,
		  warehouse_code,
		  shop_id,
		  add_time,
		  warehouse_sort,
		  warehouse_status,
		  warehouse_phone,
		  warehouse_manager,
		  warehouse_qq,
		  warehouse_wangwang,
		  warehouse_email
		from 
			szy_warehouse
		where 
			warehouse_code = #{store_id}
	</select>
	
	
	
	
	
	
	
</mapper>