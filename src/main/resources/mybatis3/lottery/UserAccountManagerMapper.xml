<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserAccountManagerMapper">
	
	<!--表名 -->
	<sql id="tableName">
		dl_user_account
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		id,	
		account_sn,	
		user_id,	
		admin_user,	
		amount,	
		cur_balance,	
		add_time,	
		last_time,	
		note,	
		process_type,	
		order_sn,	
		parent_sn,	
		pay_id,	
		payment_name,	
		third_part_name,	
		third_part_paid,	
		user_surplus,	
		user_surplus_limit,	
		bonus_price,	
		status
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{id},	
        #{account_sn},	
        #{user_id},	
        #{admin_user},	
        #{amount},	
        #{cur_balance},	
        #{add_time},	
        #{last_time},	
        #{note},	
        #{process_type},	
        #{order_sn},	
        #{parent_sn},	
        #{pay_id},	
        #{payment_name},	
        #{third_part_name},	
        #{third_part_paid},	
        #{user_surplus},	
        #{user_surplus_limit},	
        #{bonus_price},	
        #{status}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        id,	
		        account_sn,	
		        user_id,	
		        admin_user,	
		        amount,	
		        cur_balance,	
		        add_time,	
		        last_time,	
		        note,	
		        process_type,	
		        order_sn,	
		        parent_sn,	
		        pay_id,	
		        payment_name,	
		        third_part_name,	
		        third_part_paid,	
		        user_surplus,	
		        user_surplus_limit,	
		        bonus_price,	
		        status	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			id = #{id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			process_type = #{process_type},
			order_sn = #{order_sn},
			pay_id = #{pay_id},
			payment_name = #{payment_name}
		where 
		id = #{id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			id = #{id}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 1=1
		<if test="pd.keywords!= null and pd.keywords != ''"><!-- 关键词检索 -->
			and
				(
				user_id LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
				<!--	根据需求自己加检索条件
					字段1 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%')
					 or 
					字段2 LIKE CONCAT(CONCAT('%', #{pd.keywords}),'%') 
				-->
				)
		</if>
		<if test="pd.process_type!= null and pd.process_type != ''"> 
			and process_type = #{pd.process_type}
		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- 获取单个人购彩 -->
	<select id="getTotalById" parameterType="java.lang.Integer" resultType="java.lang.Double">
		SELECT SUM(amount) FROM dl_user_account WHERE user_id = #{userId} and process_type = 3;
	</select>
	<!-- 获取单个人充值汇总 -->
	<select id="getTotalRecharge" parameterType="java.lang.Integer" resultType="java.lang.Double">
		SELECT SUM(amount) FROM dl_user_account WHERE user_id = #{userId} and process_type = 2;
	</select>
	
	<!-- 累计获奖汇总 -->
	<select id="getTotalAward" parameterType="java.lang.Integer" resultType="java.lang.Double">
		SELECT SUM(amount) FROM dl_user_account WHERE user_id = #{userId} and process_type = 1;
	</select>
 
	
	<select id="findByUserId" parameterType="java.lang.Integer"  resultType="pd">
		SELECT * FROM dl_user_account WHERE user_id = #{userId} order by last_time DESC;
	</select>
	
	<select id="listPageForReward"  parameterType="page" resultType="pd">
		 SELECT
		 	o.*, 
			a.pay_time,
			a.ticket_amount,
			b.user_name,
			b.mobile,
			c.lottery_name 
		FROM
			dl_user_account o
			LEFT JOIN dl_order a ON o.order_sn = a.order_sn
			LEFT JOIN dl_user b ON a.user_id = b.user_id
			LEFT JOIN dl_lottery_classify c ON a.lottery_classify_id = c.lottery_classify_id 
		WHERE
			o.process_type = 1
				<if test="pd.user_name!= null and pd.user_name != ''"> 
						AND b.user_name LIKE CONCAT(CONCAT('%', #{pd.user_name}),'%')
				</if>
				<if test="pd.mobile!= null and pd.mobile != ''"> 
						AND b.mobile LIKE CONCAT(CONCAT('%', #{pd.mobile}),'%')
				</if>
				<if test="pd.order_sn != null and pd.order_sn != ''"> 
						AND o.order_sn LIKE CONCAT(CONCAT('%', #{pd.order_sn}),'%')
				</if>
				<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
						AND a.pay_time &gt; #{pd.lastStart1} 
				</if>
				<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
						AND a.pay_time &lt; #{pd.lastEnd1} 
				</if>
				<if test="pd.amountStart != null and pd.amountStart != ''"> 
						AND o.amount   &gt;  #{pd.amountStart} 
				</if>
				<if test="pd.amountEnd != null and pd.amountEnd != ''"> 
						AND o.amount   &lt;   #{pd.amountEnd} 
				</if>
	</select>
	
</mapper>