<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserWithdrawMapper">
	
	<!--表名 -->
	<sql id="tableName">
		dl_user_withdraw
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		id,	
		withdrawal_sn,	
		user_id,	
		amount,	
		account_id,	
		add_time,	
		status,	
		real_name,	
		card_no,	
		pay_time,	
		payment_id,	
		bank_name
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{id},	
        #{withdrawal_sn},	
        #{user_id},	
        #{amount},	
        #{account_id},	
        #{add_time},	
        #{status},	
        #{real_name},	
        #{card_no},	
        #{pay_time},	
        #{payment_id},	
        #{bank_name}	
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue1">
                  #{withdraw_sn},		
		           #{log_time},	
		           #{log_code},	
		          #{log_name}
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        id,	
		        withdrawal_sn,	
		        user_id,	
		        amount,	
		        account_id,	
		        add_time,	
		        status,	
		        real_name,	
		        card_no,	
		        pay_time,	
		        payment_id,	
		        bank_name	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	<insert id="saveUserWithdrawLog" parameterType="pd">
		insert into  dl_user_withdraw_log (
		        withdraw_sn,	
		        log_time,	
		        log_code,	
		        log_name 
		) values (
			<include refid="FieldValue1"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			id = #{id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			status = #{status} 
		where 
		id = #{id}
	</update>
	
	<update id="withdrawOperation" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			remarks = #{remarks},
			audit_time = #{audit_time},
			auditor = #{auditor},
			auditor_id = #{auditor_id},
			status = #{status}
		where 
			withdrawal_sn = #{withdrawal_sn}
	</update>
	<!-- 修改备注 -->
	<update id="updateRemarks" parameterType="pd">
		update
		<include refid="tableName"></include>
		set  
			remarks = #{remarks},
			audit_time = #{audit_time},
			auditor = #{auditor},
			auditor_id = #{auditor_id}
		where 
		withdrawal_sn = #{withdrawSn}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		SELECT
			a.*,
			u_r.id_code,
			u.mobile,
			u.user_money,
			u.user_money_limit,
			c.log_code,
			c.log_name 
		FROM
			dl_user_withdraw a
			LEFT JOIN    (select * from dl_user_real where is_delete = 0 )  u_r ON a.user_id = u_r.user_id
			LEFT JOIN dl_user u ON a.user_id = u.user_id
			LEFT JOIN (select * from dl_user_withdraw_log where log_code = 4   ) c ON a.withdrawal_sn = c.withdraw_sn 
		WHERE 
			a.id = #{id}  
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT
			a.id,
			a.withdrawal_sn,
			a.user_id,
			a.amount,
			a.account_id,
			a.add_time,
			a.status,
			a.real_name,
			a.card_no,
			a.pay_time,
			a.payment_id,
			a.bank_name,
			a.remarks,
			b.user_name,
			b.mobile,
			c.log_code,
			c.log_name
		FROM
			dl_user_withdraw a
			LEFT JOIN dl_user b ON b.user_id = a.user_id
			LEFT JOIN (select * from dl_user_withdraw_log where log_code = 4) c ON a.withdrawal_sn = c.withdraw_sn
			where 1 = 1
		<if test="pd.withdrawal_sn != null and pd.withdrawal_sn != ''"> 
			and a.withdrawal_sn  LIKE CONCAT(CONCAT('%', #{pd.withdrawal_sn}),'%')
		</if>
<!-- 		<if test="pd.withdrawLimit != null and pd.withdrawLimit != ''">  -->
<!-- 			and a.amount &gt; #{pd.withdrawLimit} -->
<!-- 		</if> -->
		<if test="pd.mobile != null and pd.mobile != ''">
			and b.mobile 
			LIKE CONCAT(CONCAT('%', #{pd.mobile}),'%')
		</if>
		<if test="pd.user_name != null and pd.user_name != ''"> 
			and a.real_name  
			LIKE CONCAT(CONCAT('%', #{pd.user_name}),'%')
		</if>
		<if test="pd.status != null and pd.status != ''"> 
			and a.status = #{pd.status }
		</if>
		<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
			and a.pay_time &gt;= #{pd.lastStart1 }
		</if>
		<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
			and a.pay_time &lt;= #{pd.lastEnd1 }
		</if>
		order by  a.add_time DESC
	</select>
	<select id="datalistPage2" parameterType="page" resultType="pd">
		SELECT
			a.id,
			a.withdrawal_sn,
			a.user_id,
			a.amount,
			a.account_id,
			a.add_time,
			a.status,
			a.real_name,
			a.card_no,
			a.pay_time,
			a.payment_id,
			a.bank_name,
			a.remarks,
			b.user_name,
			b.mobile
		FROM
			dl_user_withdraw a
			LEFT JOIN dl_user b ON b.user_id = a.user_id
			where 1 = 1
		<if test="pd.withdrawal_sn != null and pd.withdrawal_sn != ''"> 
			and a.withdrawal_sn  LIKE CONCAT(CONCAT('%', #{pd.withdrawal_sn}),'%')
		</if>
		<if test="pd.mobile != null and pd.mobile != ''">
			and b.mobile  LIKE CONCAT(CONCAT('%', #{pd.mobile}),'%')
		</if>
		<if test="pd.user_name != null and pd.user_name != ''"> 
			and a.real_name  LIKE CONCAT(CONCAT('%', #{pd.user_name}),'%')
		</if>
		<if test="pd.status != null and pd.status != ''"> 
			and a.status = #{pd.status }
		</if>
		<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
			and a.add_time &gt;= #{pd.lastStart1 }
		</if>
		<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
			and a.add_time &lt;= #{pd.lastEnd1 }
		</if>
		order by  a.add_time DESC
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		SELECT
			a.id,
			a.withdrawal_sn,
			a.user_id,
			a.amount,
			a.account_id,
			a.add_time,
			a.status,
			a.real_name,
			a.card_no,
			a.pay_time,
			a.payment_id,
			a.bank_name,
			a.remarks,
			b.user_name,
			b.mobile 
		FROM
			dl_user_withdraw a
			LEFT JOIN dl_user b ON b.user_id = a.user_id
		order by  add_time DESC
	</select>
<!-- 	根据用户Id查询 --> 
	<select id="findByUserId" parameterType="Integer" resultType="pd">
		select 
			a.*,
			c.log_code,
			c.log_name
		from 
			dl_user_withdraw a
			LEFT JOIN (select * from dl_user_withdraw_log where log_code = 4   ) c ON a.withdrawal_sn = c.withdraw_sn 
		where a.user_id = #{userId}
		order by a.add_time desc
	</select>
	
	<select id="findTotalAwardById" parameterType="Integer" resultType="java.math.BigDecimal">
		SELECT
			SUM( amount ) amount 
		FROM
			dl_user_account 
		WHERE
			user_id = #{userId}
			AND process_type = 1
	</select>
	<select id="findTotalWithDraw" parameterType="pd" resultType="pd">
		SELECT
			COALESCE(count(DISTINCT user_id),0) as userCount,
		 	COALESCE(sum(amount),0) as amountSum
		FROM
			dl_user_withdraw 
		WHERE status = '1'
			<if test="lastStart1 != null and lastStart1 != ''"> 
			and add_time &gt;= #{lastStart1 }
			</if>
			<if test="lastEnd1 != null and lastEnd1 != ''"> 
			and add_time &lt;= #{lastEnd1 }
			</if>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>