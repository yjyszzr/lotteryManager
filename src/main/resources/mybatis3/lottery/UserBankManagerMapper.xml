<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="UserBankManagerMapper">
	
	<!--表名 -->
	<sql id="tableName">
		dl_user_bank
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		id,	
		user_id,	
		real_name,	
		card_no,	
		status,	
		bank_logo,	
		bank_name,	
		last_time,	
		is_delete,	
		add_time	
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{id},	
        #{user_id},	
        #{real_name},	
        #{card_no},	
        #{status},	
        #{bank_logo},	
        #{bank_name},	
        #{last_time},	
        #{is_delete},	
        #{add_time}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        id,	
		        user_id,	
		        real_name,	
		        card_no,	
		        status,	
		        bank_logo,	
		        bank_name,	
		        last_time,	
		        is_delete,	
		        add_time	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			id = #{id}
	</delete>
	
	<update id="updateUserBankDelete" parameterType="pd">
		update dl_user_bank set is_delete = 1 where user_id = #{user_id} and is_delete = 0
	</update>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			id = #{id},
			user_id = #{user_id},
			real_name = #{real_name},
			card_no = #{card_no},
			status = #{status},
			bank_logo = #{bank_logo},
			bank_name = #{bank_name},
			last_time = #{last_time},
			is_delete = #{is_delete},
			add_time = #{add_time}
		where 
		id = #{id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			id = #{id}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT
			a.*,
			b.app_code_name 
		FROM
			dl_user_bank a
			LEFT JOIN dl_user b ON a.user_id = b.user_id 
			where  status = 1 
			<if test="pd.bank_name!= null and pd.bank_name != ''"> 
				and a.bank_name LIKE CONCAT(CONCAT('%', #{pd.bank_name}),'%')
			</if>
			<if test="pd.card_no!= null and pd.card_no != ''"> 
				and a.card_no LIKE CONCAT(CONCAT('%', #{pd.card_no}),'%')
			</if>
			<if test="pd.real_name!= null and pd.real_name != ''"> 
				and a.real_name LIKE CONCAT(CONCAT('%', #{pd.real_name}),'%') 
			</if>
				<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
				and a.add_time &gt; #{pd.lastStart1 }
			</if>
			<if test="pd.lastEnd1 != null and pd.lastEnd1!= ''"> 
				and a.add_time &lt; #{pd.lastEnd1 }
			</if>
			<if test="pd.app_code_name != null and pd.app_code_name != ''"> 
				and b.app_code_name = #{pd.app_code_name }
			</if>
		order by add_time DESC
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	
	<!-- 列表(全部) -->
	<select id="listAllByUserId" parameterType="pd" resultType="pd">
		select
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			user_id = #{user_id}  
		and
		is_delete = 0
		order By status DESC
	</select>
	
	
	<!-- fh313596790qq(青苔) -->
</mapper>