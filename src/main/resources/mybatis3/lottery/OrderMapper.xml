<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="OrderMapper">
	
	<!--表名 -->
	<sql id="tableName">
		dl_order
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		order_id,	
		order_sn,	
		parent_sn,	
		user_id,	
		order_status,	
		pay_status,	
		pay_id,	
		pay_code,	
		pay_name,	
		pay_sn,	
		money_paid,	
		ticket_amount,	
		surplus,	
		user_surplus,	
		user_surplus_limit,	
		third_party_paid,	
		user_bonus_id,	
		bonus,	
		give_integral,	
		order_from,	
		add_time,	
		pay_time,	
		order_type,	
		lottery_classify_id,	
		lottery_play_classify_id,	
		match_time,	
		winning_money,	
		play_type,	
		pass_type,	
		bet_num,	
		cathectic,	
		accept_time,	
		ticket_time,	
		forecast_money,	
		issue,	
		is_delete,	
		ticket_num
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{order_id},	
        #{order_sn},	
        #{parent_sn},	
        #{user_id},	
        #{order_status},	
        #{pay_status},	
        #{pay_id},	
        #{pay_code},	
        #{pay_name},	
        #{pay_sn},	
        #{money_paid},	
        #{ticket_amount},	
        #{surplus},	
        #{user_surplus},	
        #{user_surplus_limit},	
        #{third_party_paid},	
        #{user_bonus_id},	
        #{bonus},	
        #{give_integral},	
        #{order_from},	
        #{add_time},	
        #{pay_time},	
        #{order_type},	
        #{lottery_classify_id},	
        #{lottery_play_classify_id},	
        #{match_time},	
        #{winning_money},	
        #{play_type},	
        #{pass_type},	
        #{bet_num},	
        #{cathectic},	
        #{accept_time},	
        #{ticket_time},	
        #{forecast_money},	
        #{issue},	
        #{is_delete},	
        #{ticket_num}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        order_id,	
		        order_sn,	
		        parent_sn,	
		        user_id,	
		        order_status,	
		        pay_status,	
		        pay_id,	
		        pay_code,	
		        pay_name,	
		        pay_sn,	
		        money_paid,	
		        ticket_amount,	
		        surplus,	
		        user_surplus,	
		        user_surplus_limit,	
		        third_party_paid,	
		        user_bonus_id,	
		        bonus,	
		        give_integral,	
		        order_from,	
		        add_time,	
		        pay_time,	
		        order_type,	
		        lottery_classify_id,	
		        lottery_play_classify_id,	
		        match_time,	
		        winning_money,	
		        play_type,	
		        pass_type,	
		        bet_num,	
		        cathectic,	
		        accept_time,	
		        ticket_time,	
		        forecast_money,	
		        issue,	
		        is_delete,	
		        ticket_num	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where 
			order_id = #{order_id}
	</delete>
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			pay_time = #{pay_time},
			match_time = #{match_time}
		where 
		order_id = #{order_id}
	</update>
	<select id="selectSuccessByTime" parameterType="String" resultType="pd">
		SELECT
			user_id,
			money_paid,
			ticket_time,
			DATE_FORMAT( FROM_UNIXTIME( ticket_time ), '%Y-%m-%d %H:%i' ) AS ticket_time_str 
		FROM
			dl_order 
		WHERE order_status IN ( 3, 4, 5, 6, 7 )
			<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
				and add_time &gt; #{pd.lastStart1 }
			</if>
			<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
				and add_time &lt; #{pd.lastEnd1 }
			</if>
	</select>
	<!-- 通过ID获取数据 -->
	<select id="findByOrderSn" parameterType="String" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			order_sn = #{order_sn}
	</select>
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		select 
		<include refid="Field"></include>
		from 
		<include refid="tableName"></include>
		where 
			order_id = #{order_id}
	</select>
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
		SELECT
			o.order_id,
			o.order_sn,
			u.user_id,
			u.user_name,
			u.mobile,
			l.lottery_name,
			o.order_status,
			o.pay_name,
			o.ticket_amount,
			o.third_party_paid,
			o.winning_money,
			o.bonus,
			o.surplus,
			o.pay_time 
		FROM
			dl_order o
			LEFT JOIN dl_lottery_classify l ON o.lottery_classify_id = l.lottery_classify_id
			LEFT JOIN dl_user u ON o.user_id = u.user_id 
		WHERE
			o.order_status = 7
			<if test="pd.order_sn != null and pd.order_sn != ''"> 
			and o.order_sn  
				LIKE CONCAT(CONCAT('%', #{pd.order_sn}),'%')
		</if>
		<if test="pd.mobile != null and pd.mobile != ''">
			and u.mobile  
			LIKE CONCAT(CONCAT('%', #{pd.mobile}),'%')
		</if>
		<if test="pd.user_name != null and pd.user_name != ''"> 
			and u.user_name  
				LIKE CONCAT(CONCAT('%', #{pd.user_name}),'%')
		</if>
		<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
			and o.pay_time &gt;= #{pd.lastStart }
		</if>
		<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
			and o.pay_time &lt;= #{pd.lastEnd1 }
		</if>
		<if test="pd.amountStart != null and pd.amountStart != ''"> 
			and o.winning_money &gt;= #{pd.amountStart }
		</if>
		<if test="pd.amountEnd != null and pd.amountEnd != ''"> 
			and o.winning_money &lt;= #{pd.amountEnd }
		</if>
			order by pay_time desc
	</select>
	<!-- 列表 -->
	<select id="datalistPage1" parameterType="page" resultType="pd">
		SELECT
			o.order_id,
			o.order_sn,
			u.user_id,
			u.user_name,
			u.mobile,
			l.lottery_name,
			l.lottery_classify_id,
			o.order_status,
			o.pay_name,
			o.ticket_amount,
			o.winning_money,
			o.bonus,
			o.surplus,
			o.third_party_paid,
			o.add_time,
			o.pay_time 
		FROM
			dl_order o
			LEFT JOIN dl_lottery_classify l ON o.lottery_classify_id = l.lottery_classify_id
			LEFT JOIN dl_user u ON o.user_id = u.user_id 
		WHERE 1 = 1
			<if test="pd.order_sn != null and pd.order_sn != ''"> 
			and o.order_sn  
				LIKE CONCAT(CONCAT('%', #{pd.order_sn}),'%')
		</if>
		<if test="pd.mobile != null and pd.mobile != ''">
			and u.mobile  
			LIKE CONCAT(CONCAT('%', #{pd.mobile}),'%')
		</if>
		<if test="pd.user_name != null and pd.user_name != ''"> 
			and u.user_name  
				LIKE CONCAT(CONCAT('%', #{pd.user_name}),'%')
		</if>
		<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
			and o.add_time &gt; #{pd.lastStart1 }
		</if>
		<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
			and o.add_time &lt; #{pd.lastEnd1 }
		</if>
		<if test="pd.amountStart != null and pd.amountStart != ''"> 
			and o.winning_money &gt; #{pd.amountStart }
		</if>
		<if test="pd.amountEnd != null and pd.amountEnd != ''"> 
			and o.winning_money &lt; #{pd.amountEnd }
		</if>
		<if test="pd.order_status != null and pd.order_status != ''"> 
			and o.order_status = #{pd.order_status }
		</if>
		<if test="pd.order_status == null || pd.order_status == ''"> 
			and o.order_status != 8   and o.order_status != 0 
		</if>
		<if test="pd.lottery_classify_id != null and pd.lottery_classify_id != ''"> 
			and l.lottery_classify_id = #{pd.lottery_classify_id }
		</if>
		order  by 	o.add_time desc
	</select>
	
	<select id="findAllPayLog" resultType="pd">
		select * from dl_pay_log where order_sn in 
			<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</select>
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		select 
			o.order_id,
			o.order_sn,
			u.user_id,
			u.user_name,
			u.mobile,
			l.lottery_name,
			l.lottery_classify_id,
			o.order_status,
			o.pay_name,
			o.ticket_amount,
			o.winning_money,
			o.bonus,
			o.surplus,
			o.third_party_paid,
			o.add_time,
			o.pay_time,
			p.pay_order_sn 
		FROM
			dl_order o
			LEFT JOIN dl_lottery_classify l ON o.lottery_classify_id = l.lottery_classify_id
			LEFT JOIN dl_user u ON o.user_id = u.user_id  
			LEFT JOIN dl_pay_log p ON o.order_sn = p.order_sn  
			
		WHERE 1 = 1
			<if test="lastStart1 != null and lastStart1 != ''"> 
			and o.add_time &gt; #{lastStart1 }
		</if>
		<if test="lastEnd1 != null and lastEnd1 != ''"> 
			and o.add_time &lt; #{lastEnd1 }
		</if>
		<if test="order_status != null and order_status != ''"> 
			and o.order_status = #{order_status }
		</if>
	</select>
	
	<select id="selectByTime" parameterType="String" resultType="pd">
		SELECT
			user_id,
			money_paid,
			ticket_time,
			DATE_FORMAT( FROM_UNIXTIME( ticket_time ), '%Y-%m-%d %H:%i' ) AS ticket_time_str 
		FROM
			dl_order 
		WHERE
			DATE_FORMAT( FROM_UNIXTIME( ticket_time ), '%Y-%m-%d %H:%i' ) = #{addTime}
			AND order_status IN ( 3, 4, 5, 6, 7 )
	</select>
	<select id="toDetail" parameterType="Integer" resultType="pd">
		SELECT
		 *
		FROM
			dl_order_detail
		WHERE
		 order_id = #{order_id}
	</select>
	<!-- 数据统计中-首购订单 -->
	<select id="getFirstOrderList" parameterType="page" resultType="pd">
		SELECT COALESCE(count(DISTINCT user_id),0) as count,
			 	COALESCE(sum(money_paid),0) as amount,
			 	COALESCE(sum(ticket_amount),0) as amountTicket
		from dl_order   
		where order_sn in 
			(SELECT  order_sn from dl_order 
			where order_status in ('3','4','5','6','7') GROUP BY user_id 
			HAVING min(add_time) &gt; #{pd.lastStart1} and  min(add_time) &lt; #{pd.lastEnd1} );
	</select>
	<!-- 新增购彩用户 -->
	<select id="getFirstOrderAllList" parameterType="page" resultType="pd">
		SELECT COALESCE(count(DISTINCT user_id),0) as count,
			 	COALESCE(sum(money_paid),0) as amount,
			 	COALESCE(sum(ticket_amount),0) as amountTicket
		from dl_order   
		where user_id in 
			(SELECT  user_id from dl_order 
			where order_status in ('3','4','5','6','7') GROUP BY user_id 
			HAVING min(add_time) &gt; #{pd.lastStart1} and  min(add_time) &lt; #{pd.lastEnd1} )
			and add_time &gt; #{pd.lastStart1} and  add_time &lt; #{pd.lastEnd1}
			and order_status in ('3','4','5','6','7');
	</select>
	<!-- 老用户购彩 -->
	<select id="getOldUserOrderList" parameterType="page" resultType="pd">
		SELECT COALESCE(count(DISTINCT user_id),0) as count,
			 	COALESCE(sum(money_paid),0) as amount,
			 	COALESCE(sum(ticket_amount),0) as amountTicket
		from dl_order   
		where user_id not in 
			(SELECT  user_id from dl_order 
			where order_status in ('3','4','5','6','7') GROUP BY user_id 
			HAVING min(add_time) &gt; #{pd.lastStart1} and  min(add_time) &lt; #{pd.lastEnd1} )
			and add_time &gt; #{pd.lastStart1} and  add_time &lt; #{pd.lastEnd1}
			and order_status in ('3','4','5','6','7');
	</select>
	<!-- 数据统计中-复购订单 -->
	<select id="getAgainOrderList" parameterType="page" resultType="pd">
		SELECT 	COALESCE(count(DISTINCT user_id),0) as count,
				COALESCE(sum(money_paid),0) as amount,
			 	COALESCE(sum(ticket_amount),0) as amountTicket
		from dl_order   
		where order_sn not in 
				(SELECT 	order_sn from dl_order 
				where order_status in ('3','4','5','6','7') GROUP BY user_id 
				HAVING min(add_time) &gt; #{pd.lastStart1} and  min(add_time) &lt; #{pd.lastEnd1}
				)
			and user_id not in (
				SELECT  user_id  from dl_order 
				where add_time &lt; #{pd.lastStart1} 
						and order_status in ('3','4','5','6','7')
				GROUP BY user_id  having count(user_id)>1
				) 
			and   order_status in ('3','4','5','6','7')
			and add_time  &gt; #{pd.lastStart1} and  add_time &lt; #{pd.lastEnd1}
	</select>
	<!-- 数据统计中-订单数据 -->
	<select id="getOrderAndDetail" parameterType="page" resultType="pd">
		SELECT  o.order_sn, 
				o.user_id,
				lpc.play_name,
				GROUP_CONCAT(d.match_id) as match_id  ,
				d.changci,
				o.pass_type,
				o.cathectic  ,
				o.ticket_amount ,
				o.order_status ,
				o.winning_money ,
				o.add_time ,
				o.award_time  
		FROM dl_order o LEFT JOIN dl_order_detail d on o.order_id = d.order_id 
						LEFT JOIN dl_lottery_play_classify lpc on o.lottery_play_classify_id=lpc.lottery_play_classify_id
		where o.add_time &gt; #{pd.lastStart1} and  o.add_time &lt; #{pd.lastEnd1}
		GROUP BY order_sn
		ORDER BY add_time
	</select>
	<!-- 数据统计中-彩票数据 -->
	<select id="getOrderOfPlay" parameterType="page" resultType="pd">
		SELECT  
		<if test="pd.groupDay != null and pd.groupDay != ''"> 
		 DATE_FORMAT( FROM_UNIXTIME( o.add_time ), "%Y-%m-%d" ) as date,
		 </if>
		 <if test="pd.groupMonth != null and pd.groupMonth != ''"> 
		 DATE_FORMAT( FROM_UNIXTIME( o.add_time ), "%Y-%m" ) as date,
		 </if>
					lpc.play_name as playName,
					lpc.lottery_play_classify_id as classify,
					count(distinct o.user_id) as userCount,
					count(o.order_sn) as orderCount,
					sum(o.ticket_amount) as amount,
					sum(o.money_paid) as paidAmount
		FROM dl_order o  LEFT JOIN dl_lottery_play_classify lpc on o.lottery_play_classify_id=lpc.lottery_play_classify_id
	  where order_status in ('3','4','5','6','7') 
	  	<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
			and DATE_FORMAT( FROM_UNIXTIME( o.add_time ), "%Y-%m-%d" ) &gt;= #{pd.lastStart1 }
		</if>
		<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
			and DATE_FORMAT( FROM_UNIXTIME( o.add_time ), "%Y-%m-%d" ) &lt;= #{pd.lastEnd1 }
		</if> 
	  
		GROUP BY date,lpc.play_name 
	</select>
	<select id="getAmountForDayHour"  parameterType="page" resultType="pd">
	SELECT COALESCE(sum( ticket_amount ),0) as amount
    FROM dl_order 
		where order_status in ('3','4','5','6','7') and 
		DATE_FORMAT( FROM_UNIXTIME( add_time ), '%Y-%m-%d %H' ) = #{pd.dayHour }
	</select>
	
	<select id="getMatchAmountByTime"  parameterType="page" resultType="pd">
	SELECT det.match_id, sum( a.amount ) as  amount
	FROM dl_order_detail det RIGHT JOIN (
		SELECT o.order_id, sum( o.ticket_amount ) / ( count( o.order_sn ) * count( o.order_sn ) ) AS amount 
		FROM dl_order o LEFT JOIN dl_order_detail d ON o.order_id = d.order_id 
		WHERE DATE_FORMAT( FROM_UNIXTIME( d.add_time ), '%Y-%m-%d' ) &gt;= #{pd.lastStart1 }
				AND DATE_FORMAT( FROM_UNIXTIME( d.add_time ), '%Y-%m-%d' ) &lt;= #{pd.lastEnd1 }
				AND o.order_status IN ( '3', '4', '5', '6', '7' ) 
				AND d.changci NOT IN ('T56','T57')
		GROUP BY o.order_sn 
		) a ON a.order_id = det.order_id 
	GROUP BY det.match_id
	UNION
	SELECT det.changci as match_id, sum( a.amount )  as  amount
	FROM dl_order_detail det RIGHT JOIN ( 
		SELECT o.order_id, sum( o.ticket_amount ) / ( count( o.order_sn ) * count( o.order_sn ) )  AS amount 
		FROM dl_order o LEFT JOIN dl_order_detail d ON o.order_id = d.order_id 
		WHERE DATE_FORMAT( FROM_UNIXTIME( d.add_time ), '%Y-%m-%d' ) &gt;= #{pd.lastStart1 }
				AND DATE_FORMAT( FROM_UNIXTIME( d.add_time ), '%Y-%m-%d' ) &lt;= #{pd.lastEnd1 }
				AND o.order_status IN ( '3', '4', '5', '6', '7' ) 
				AND d.changci IN ('T56','T57')
		GROUP BY o.order_sn 
		) a ON a.order_id = det.order_id 
	GROUP BY det.changci
	</select>
	
	<select id="getTotalAmountByTime"  parameterType="page" resultType="pd">
	select COALESCE(count(DISTINCT o.user_id),0) as userCount,
			COALESCE(sum(o.ticket_amount),0) as amountSum,
			COALESCE(sum(o.winning_money),0) as winningSum,
			COALESCE(sum(o.money_paid),0) as paidSum,
			COALESCE(sum(o.bonus),0) as bonusSum
	from dl_order o left join dl_user u on o.user_id = u.user_id
	where o.order_status in ( '3', '4', '5', '6', '7' ) 
	<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
			and DATE_FORMAT( FROM_UNIXTIME( o.add_time ), "%Y-%m-%d" ) &gt;= #{pd.lastStart1 }
		</if>
		<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
			and DATE_FORMAT( FROM_UNIXTIME( o.add_time ), "%Y-%m-%d" ) &lt;= #{pd.lastEnd1 }
		</if>  
		<if test="pd.UserID != null and pd.UserID != ''"> 
			and u.user_id=#{pd.UserID }
		</if>
	</select>
	<!-- 订单状态:0-待付款,1-待出票,2-出票失败3-待开奖4-未中将5-已中奖6-派奖中7-审核中8-支付失败 -->
	<select id="getGroupByOrderStatus"  parameterType="page" resultType="pd">
	SELECT
		COALESCE(sum(ticket_amount),0) as amountSum,
		COALESCE(sum(money_paid),0) as paidSum,
		order_status as status
	FROM dl_order 
	where 1=1
		<if test="pd.lastStart1 != null and pd.lastStart1 != ''"> 
			and DATE_FORMAT( FROM_UNIXTIME( add_time ), "%Y-%m-%d" ) &gt;= #{pd.lastStart1 }
		</if>
		<if test="pd.lastEnd1 != null and pd.lastEnd1 != ''"> 
			and DATE_FORMAT( FROM_UNIXTIME( add_time ), "%Y-%m-%d" ) &lt;= #{pd.lastEnd1 }
		</if>  
		GROUP BY order_status
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			order_id in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>