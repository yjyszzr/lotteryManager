<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="SuperWhiteListMapper">
	
	<!--表名 -->
	<sql id="tableName">
		dl_user
	</sql>
	
	<!-- 字段 -->
	<sql id="Field">
		user_id,	
		user_name,	
		mobile,	
		email,	
		password,	
		salt,	
		nickname,	
		sex,	
		birthday,	
		detail_address,	
		headimg,	
		user_money,	
		user_money_limit,	
		frozen_money,	
		pay_point,	
		rank_point,	
		reg_time,	
		reg_ip,	
		last_time,	
		last_ip,	
		mobile_supplier,	
		mobile_province,	
		mobile_city,	
		reg_from,	
		surplus_password,	
		pay_pwd_salt,	
		user_status,	
		pass_wrong_count,	
		user_type,	
		is_real,	
		user_remark,	
		add_time,	
		push_key,	
		device_channel,	
		is_business,	
		lon,	
		lat,	
		city,	
		province,	
		is_super_white
		
	</sql>
	
	<!-- 字段值 -->
	<sql id="FieldValue">
        #{user_id},	
        #{user_name},	
        #{mobile},	
        #{email},	
        #{password},	
        #{salt},	
        #{nickname},	
        #{sex},	
        #{birthday},	
        #{detail_address},	
        #{headimg},	
        #{user_money},	
        #{user_money_limit},	
        #{frozen_money},	
        #{pay_point},	
        #{rank_point},	
        #{reg_time},	
        #{reg_ip},	
        #{last_time},	
        #{last_ip},	
        #{mobile_supplier},	
        #{mobile_province},	
        #{mobile_city},	
        #{reg_from},	
        #{surplus_password},	
        #{pay_pwd_salt},	
        #{user_status},	
        #{pass_wrong_count},	
        #{user_type},	
        #{is_real},	
        #{user_remark},	
        #{add_time},	
        #{push_key},	
        #{device_channel},	
        #{is_business},	
        #{lon},	
        #{lat},	
        #{city},	
        #{province},	
        #{is_super_white}	
	</sql>
	
	<!-- 新增-->
	<insert id="save" parameterType="pd">
		insert into 
	<include refid="tableName"></include>
		(
		        user_id,	
		        user_name,	
		        mobile,	
		        email,	
		        password,	
		        salt,	
		        nickname,	
		        sex,	
		        birthday,	
		        detail_address,	
		        headimg,	
		        user_money,	
		        user_money_limit,	
		        frozen_money,	
		        pay_point,	
		        rank_point,	
		        reg_time,	
		        reg_ip,	
		        last_time,	
		        last_ip,	
		        mobile_supplier,	
		        mobile_province,	
		        mobile_city,	
		        reg_from,	
		        surplus_password,	
		        pay_pwd_salt,	
		        user_status,	
		        pass_wrong_count,	
		        user_type,	
		        is_real,	
		        user_remark,	
		        add_time,	
		        push_key,	
		        device_channel,	
		        is_business,	
		        lon,	
		        lat,	
		        city,	
		        province,	
		        has_third_user_id,	
		        is_super_white	
		) values (
	<include refid="FieldValue"></include>
		)
	</insert>
	
	<!-- 删除-->
	<delete id="delete" parameterType="pd">
		delete from
		<include refid="tableName"></include>
		where user_id
			 = #{user_id}
	</delete>
	
	<update id="recharge" parameterType="pd">
		INSERT INTO dl_user_store_money(user_id, store_id, money, last_time) VALUES(#{user_id}, #{store_id}, #{number}, #{last_time})
		ON DUPLICATE KEY
		UPDATE money = money + #{number}, 
		user_id = #{user_id},
		store_id = #{store_id},
		last_time = #{last_time}
	</update>
	
	<update id="saveUserBonus" parameterType="pd">
		INSERT INTO dl_user_bonus(
			user_id,				 
			bonus_id,				 
			bonus_sn,				 
			bonus_price,			 
			receive_time,			 
			used_time,				 
			start_time,				 
			end_time,				 
			add_time,				 
			order_sn,				 
			bonus_status,				 
			is_delete,				 							 
			use_range,                
			min_goods_amount,        
			is_read,                  
			pay_log_id,               
			store_id              
		)
		SELECT 
			#{user_id} AS user_id, 
			activity_bonus.bonus_id,
			#{bonus_sn} AS bonus_sn,
			activity_bonus.bonus_amount,
			#{receive_time} AS receive_time,
			0 AS used_time,
			#{add_time} AS start_time,
			#{add_time} + activity_bonus.end_time*86400 AS end_time,
			#{add_time} AS add_time,
			"" AS order_sn,
			0 AS bonus_status,
			0 AS is_delete,
			0 AS use_range,
			activity_bonus.min_goods_amount,
			0 AS is_read,
			NULL AS pay_log_id,
			#{store_id}  AS store_id
		FROM dl_activity_bonus activity_bonus
		WHERE activity_bonus.recharge_card_id = #{recharge_card_id} 
	</update>
	
	<update id="deduction" parameterType="pd">
		INSERT INTO dl_user_store_money(user_id, store_id, money, last_time) VALUES(#{user_id}, #{store_id}, -#{number}, #{last_time})
		ON DUPLICATE KEY
		UPDATE money = money - #{number}, 
		user_id = #{user_id},
		store_id = #{store_id},
		last_time = #{last_time}
	</update>
	
	
	<!-- 修改 -->
	<update id="edit" parameterType="pd">
		update
		<include refid="tableName"></include>
		set 
			user_name = #{user_name},
			email = #{email},
			password = #{password},
			salt = #{salt},
			nickname = #{nickname},
			sex = #{sex},
			birthday = #{birthday},
			detail_address = #{detail_address},
			headimg = #{headimg},
			user_money_limit = #{user_money_limit},
			frozen_money = #{frozen_money},
			pay_point = #{pay_point},
			rank_point = #{rank_point},
			reg_time = #{reg_time},
			reg_ip = #{reg_ip},
			last_time = #{last_time},
			last_ip = #{last_ip},
			mobile_supplier = #{mobile_supplier},
			mobile_province = #{mobile_province},
			mobile_city = #{mobile_city},
			reg_from = #{reg_from},
			surplus_password = #{surplus_password},
			pay_pwd_salt = #{pay_pwd_salt},
			user_status = #{user_status},
			pass_wrong_count = #{pass_wrong_count},
			user_type = #{user_type},
			is_real = #{is_real},
			user_remark = #{user_remark},
			add_time = #{add_time},
			push_key = #{push_key},
			device_channel = #{device_channel},
			is_business = #{is_business},
			lon = #{lon},
			lat = #{lat},
			city = #{city},
			province = #{province},
			has_third_user_id = #{has_third_user_id},
			is_super_white = #{is_super_white}
		where user_id
		 = #{user_id}
	</update>
	
	<!-- 通过ID获取数据 -->
	<select id="findById" parameterType="pd" resultType="pd">
		SELECT store.id store_id, store.name,user.user_id, user.user_name, user.nickname, user.mobile,user_store_money.money
		,user_store_money.id 
		FROM (dl_store store , dl_user user)
		LEFT JOIN dl_user_store_money user_store_money ON user.`user_id`  = user_store_money.`user_id` AND store.`id`  = user_store_money.`store_id` 
		WHERE user.is_super_white = 1
		and	user.user_id = #{user_id}
		and store.id = #{store_id}
	</select>	
	
	<select id="findUserByUserid" parameterType="pd" resultType="pd">
		select * from dl_user user where user.user_id = #{user_id}
	</select>
	
	<select id="getSumRechargeCardRealValue" parameterType="pd" resultType="pd">
		SELECT SUM(user_account.recharge_card_real_value) as recharge_card_real_value
		FROM `dl_user_account` user_account
		WHERE 1 = 1
		<if test="user_id != null and user_id != ''">
		and user_account.user_id = #{user_id}
		</if>
		<if test="store_id != null and store_id != ''">
		AND user_account.store_id = #{store_id}
		</if>
	</select>	
	
	<!-- 列表 -->
	<select id="datalistPage" parameterType="page" resultType="pd">
        SELECT store.id store_id, store.name,user.user_id, user.user_name, user.nickname, user.mobile,user_store_money.money
		,user_store_money.id 
		FROM (dl_store store , dl_user user)
		LEFT JOIN dl_user_store_money user_store_money ON user.`user_id`  = user_store_money.`user_id` AND store.`id`  = user_store_money.`store_id` 
		WHERE user.is_super_white = 1
        <if test="pd.mobile != null and pd.mobile != ''">
			and user.mobile  
			LIKE CONCAT(CONCAT('%', #{pd.mobile}),'%')
		</if>
		<if test="pd.user_id!= null and pd.user_id != ''"> 
			and user.user_id LIKE CONCAT(CONCAT('%', #{pd.user_id}),'%')
 		</if>
 		<if test="pd.user_name != null and pd.user_name != ''"> 
			and user.user_name LIKE CONCAT(CONCAT('%', #{pd.user_name}),'%')
		</if>
		<if test="pd.store_name!= null and pd.store_name != ''"> 
			and store.name LIKE CONCAT(CONCAT('%', #{pd.store_name}),'%')
		</if>
 		<if test="pd.nickname!= null and pd.nickname != ''"> 
			and user.nickname LIKE CONCAT(CONCAT('%', #{pd.nickname}),'%')
 		</if>
		<if test="pd.mobile!= null and pd.mobile != ''"> 
			and user.mobile LIKE CONCAT(CONCAT('%', #{pd.mobile}),'%')
 		</if>
	</select>
	
	<!-- 列表(全部) -->
	<select id="listAll" parameterType="pd" resultType="pd">
		SELECT store.id store_id, store.name, user.user_id user_id, user.user_name, user.nickname, user.mobile,user_store_money.money
		,user_store_money.id 
		FROM (dl_store store , dl_user user)
		LEFT JOIN dl_user_store_money user_store_money ON user.`user_id`  = user_store_money.`user_id` AND store.`id`  = user_store_money.`store_id` 
		WHERE user.is_super_white = 1
        <if test="mobile != null and mobile != ''">
			and user.mobile  
			LIKE CONCAT(CONCAT('%', #{mobile}),'%')
		</if>
	</select>
	
	<select id="datalistAccountPage" parameterType="page" resultType="pd">
		SELECT user.`mobile`, store.`name`, user_account.* 
		FROM `dl_user_account` user_account, `dl_user` user, `dl_store` store
		WHERE user_account.`user_id` = user.user_id AND user_account.`store_id` = store.`id`
		<if test="pd.user_id!= null and pd.user_id != ''"> 
		and user_account.user_id LIKE CONCAT(CONCAT('%', #{pd.user_id}),'%')
		</if>
		<if test="pd.user_id!= null and pd.user_id != ''"> 
		and user_account.user_id LIKE CONCAT(CONCAT('%', #{pd.user_id}),'%')
		</if>
		<if test="pd.store_id!= null and pd.store_id != ''"> 
		and user_account.store_id LIKE CONCAT(CONCAT('%', #{pd.store_id}),'%')
 		</if> 
 		<if test="pd.store_name!= null and pd.store_name != ''"> 
		and store.name LIKE CONCAT(CONCAT('%', #{pd.store_name}),'%')
		</if>
		<if test="pd.end_add_time!= null and pd.end_add_time != ''"> 
		AND user_account.`add_time` &lt;= #{pd.end_add_time}
 		</if>
		<if test="pd.start_add_time!= null and pd.start_add_time != ''"> 
		AND user_account.`add_time` &gt;= #{pd.start_add_time}
 		</if>
 		<if test="pd.process_type!= null and pd.process_type != ''"> 
		AND user_account.`process_type` = #{pd.process_type}
 		</if>
 		order by user_account.add_time desc
	</select>
	
	<select id="datalistStore" parameterType="pd" resultType="pd">
		SELECT * FROM `dl_store`
	</select>
	
	<select id="datalistAccount" parameterType="pd" resultType="pd">
		SELECT user.`mobile`, store.`name`, user_account.*
		FROM `dl_user_account` user_account, `dl_user` user, `dl_store` store
		WHERE user_account.`user_id` = user.user_id AND user_account.`store_id` = store.`id`
		<if test="user_id!= null and user_id != ''"> 
		and user_account.user_id LIKE CONCAT(CONCAT('%', #{user_id}),'%')
		</if>
		<if test="store_id!= null and store_id != ''"> 
		and user_account.store_id LIKE CONCAT(CONCAT('%', #{store_id}),'%')
 		</if> 
 		<if test="store_name!= null and store_name != ''"> 
		and store.name LIKE CONCAT(CONCAT('%', #{store_name}),'%')
		</if>
		<if test="end_add_time!= null and end_add_time != ''"> 
		AND user_account.`add_time` &lt;= #{end_add_time}
 		</if>
		<if test="start_add_time!= null and start_add_time != ''"> 
		AND user_account.`add_time` &gt;= #{start_add_time}
 		</if>
 		<if test="process_type!= null and process_type != ''"> 
		AND user_account.`process_type` = #{process_type}
 		</if>
 		order by user_account.add_time desc
	</select>
	
	<!-- 批量删除 -->
	<delete id="deleteAll" parameterType="String">
		delete from
		<include refid="tableName"></include>
		where 
			 in
		<foreach item="item" index="index" collection="array" open="(" separator="," close=")">
                 #{item}
		</foreach>
	</delete>
	
	<!-- fh313596790qq(青苔) -->
</mapper>